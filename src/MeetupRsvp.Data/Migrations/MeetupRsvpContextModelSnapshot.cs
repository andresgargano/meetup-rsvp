// <auto-generated />
using System;
using MeetupRsvp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MeetupRsvp.Data.Migrations
{
    [DbContext(typeof(MeetupRsvpContext))]
    partial class MeetupRsvpContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("MeetupRsvp.Data.Member", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("PhotoUrl");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("MeetupRsvp.Data.Models.Event", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<DateTime>("Time");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("MeetupRsvp.Data.Models.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Name");

                    b.Property<string>("State");

                    b.Property<string>("UrlName");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("MeetupRsvp.Data.Models.Rsvp", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("EventId");

                    b.Property<long?>("GroupId");

                    b.Property<int>("Guests");

                    b.Property<DateTime>("LastModified");

                    b.Property<long?>("MemberId");

                    b.Property<bool>("Response");

                    b.Property<long?>("VenueId");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("GroupId");

                    b.HasIndex("MemberId");

                    b.HasIndex("VenueId");

                    b.ToTable("Rsvps");
                });

            modelBuilder.Entity("MeetupRsvp.Data.Models.Topic", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("GroupId");

                    b.Property<string>("Name");

                    b.Property<string>("UrlKey");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("MeetupRsvp.Data.Models.Venue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Venues");
                });

            modelBuilder.Entity("MeetupRsvp.Data.Models.Rsvp", b =>
                {
                    b.HasOne("MeetupRsvp.Data.Models.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId");

                    b.HasOne("MeetupRsvp.Data.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("MeetupRsvp.Data.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.HasOne("MeetupRsvp.Data.Models.Venue", "Venue")
                        .WithMany()
                        .HasForeignKey("VenueId");
                });

            modelBuilder.Entity("MeetupRsvp.Data.Models.Topic", b =>
                {
                    b.HasOne("MeetupRsvp.Data.Models.Group")
                        .WithMany("Topics")
                        .HasForeignKey("GroupId");
                });
#pragma warning restore 612, 618
        }
    }
}
